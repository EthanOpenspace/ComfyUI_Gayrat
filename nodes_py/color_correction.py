"""
–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —É–ª—É—á—à–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏:
–í–∫–ª—é—á–µ–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:

–ò–∑ –æ—Ä–∏–≥–∏–Ω–∞–ª–∞:

‚úÖ gamma, contrast, exposure, offset
‚úÖ hue, saturation, value
‚úÖ clamp
‚úÖ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –º–∞—Å–æ–∫


–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É–ª—É—á—à–µ–Ω–∏—è:

‚úÖ brightness - –±–æ–ª–µ–µ –∏–Ω—Ç—É–∏—Ç–∏–≤–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä —è—Ä–∫–æ—Å—Ç–∏
‚úÖ highlights/shadows - —Ä–∞–∑–¥–µ–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–≤–µ—Ç–ª—ã—Ö –∏ —Ç–µ–º–Ω—ã—Ö –æ–±–ª–∞—Å—Ç–µ–π
‚úÖ temperature/tint - —Ü–≤–µ—Ç–æ–≤–∞—è –∫–æ—Ä—Ä–µ–∫—Ü–∏—è –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏



–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —É–ª—É—á—à–µ–Ω–∏—è:

üöÄ –ü–æ–ª–Ω–æ—Å—Ç—å—é –Ω–∞ PyTorch (–±—ã—Å—Ç—Ä–∞—è GPU –æ–±—Ä–∞–±–æ—Ç–∫–∞)
üîß –ù–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç OpenCV –∏–ª–∏ mtb utils
üìä –ë–æ–ª–µ–µ —Ç–æ—á–Ω—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º—ã HSV –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –Ω–∞ —Ç–µ–Ω–∑–æ—Ä–∞—Ö
üéØ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–æ–≤
üé≠ –£–ª—É—á—à–µ–Ω–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –º–∞—Å–æ–∫ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º —Ä–∞–∑–º–µ—Ä–Ω–æ—Å—Ç–∏

–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –Ω–∞–¥ –æ—Ä–∏–≥–∏–Ω–∞–ª–æ–º:

–ë–æ–ª—å—à–µ —Ç–≤–æ—Ä—á–µ—Å–∫–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è
–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ü–≤–µ—Ç–æ–∫–æ—Ä—Ä–µ–∫—Ü–∏–∏ (temperature/tint, highlights/shadows)
–ü–æ–ª–Ω–æ—Å—Ç—å—é –∞–≤—Ç–æ–Ω–æ–º–Ω—ã–π –∫–æ–¥ –±–µ–∑ –≤–Ω–µ—à–Ω–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
–°–æ—Ö—Ä–∞–Ω–µ–Ω–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å HDR workflows —á–µ—Ä–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä clamp
–ë–æ–ª–µ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ GPU

–≠—Ç–∞ –≤–µ—Ä—Å–∏—è –¥–∞–µ—Ç –≤–∞–º –º–æ—â–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç —Ü–≤–µ—Ç–æ–∫–æ—Ä—Ä–µ–∫—Ü–∏–∏, —Å—Ä–∞–≤–Ω–∏–º—ã–π —Å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º–∏ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞–º–∏, –Ω–æ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤ ComfyUI workflow.
"""

"""
MTB_ColorCorrect - –ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –Ω–æ–¥–∞ —Ü–≤–µ—Ç–æ–∫–æ—Ä—Ä–µ–∫—Ü–∏–∏ –¥–ª—è ComfyUI

–û–ü–ò–°–ê–ù–ò–ï –ü–ê–†–ê–ú–ï–¢–†–û–í:

1. –Ø–†–ö–û–°–¢–¨ (Brightness) [0.0-2.0, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 1.0]
   - –û–±—â–∞—è —è—Ä–∫–æ—Å—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
   - 1.0 = –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
   - 0.5 = –≤ –¥–≤–∞ —Ä–∞–∑–∞ —Ç–µ–º–Ω–µ–µ
   - 2.0 = –≤ –¥–≤–∞ —Ä–∞–∑–∞ —è—Ä—á–µ
   - –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: 0.8-1.2 –¥–ª—è –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏
   - Default: 1.0

2. –ö–û–ù–¢–†–ê–°–¢ (Contrast) [0.0-5.0, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 1.0]
   - –†–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É —Å–≤–µ—Ç–ª—ã–º–∏ –∏ —Ç–µ–º–Ω—ã–º–∏ –æ–±–ª–∞—Å—Ç—è–º–∏
   - 1.0 = –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
   - <1.0 = –º—è–≥–∫–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
   - >1.0 = —Ä–µ–∑–∫–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
   - –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: 0.8-1.3 –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π
   - Default: 1.0

3. –ì–ê–ú–ú–ê (Gamma) [0.1-5.0, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 1.0]
   - –ù–µ–ª–∏–Ω–µ–π–Ω–∞—è –∫–æ—Ä—Ä–µ–∫—Ü–∏—è —Å—Ä–µ–¥–Ω–∏—Ö —Ç–æ–Ω–æ–≤
   - <1.0 = –æ—Å–≤–µ—Ç–ª–µ–Ω–∏–µ —Å—Ä–µ–¥–Ω–∏—Ö —Ç–æ–Ω–æ–≤
   - >1.0 = –∑–∞—Ç–µ–º–Ω–µ–Ω–∏–µ —Å—Ä–µ–¥–Ω–∏—Ö —Ç–æ–Ω–æ–≤
   - –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: 0.8-1.2 –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏ —ç–∫—Å–ø–æ–∑–∏—Ü–∏–∏
   - Default: 1.0

4. –≠–ö–°–ü–û–ó–ò–¶–ò–Ø (Exposure) [-5.0 –¥–æ 5.0, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 0.0]
   - –ò–º–∏—Ç–∞—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤—ã–¥–µ—Ä–∂–∫–∏ –∫–∞–º–µ—Ä—ã
   - +1.0 = –≤ –¥–≤–∞ —Ä–∞–∑–∞ –±–æ–ª—å—à–µ —Å–≤–µ—Ç–∞
   - -1.0 = –≤ –¥–≤–∞ —Ä–∞–∑–∞ –º–µ–Ω—å—à–µ —Å–≤–µ—Ç–∞
   - –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: ¬±0.5 –¥–ª—è —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ–π –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏
   - Default: 0.0

5. –°–ú–ï–©–ï–ù–ò–ï (Offset) [-1.0 –¥–æ 1.0, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 0.0]
   - –°–¥–≤–∏–≥ —á–µ—Ä–Ω–æ–π —Ç–æ—á–∫–∏ (–∞–¥–¥–∏—Ç–∏–≤–Ω—ã–π)
   - –ü–æ–ª–µ–∑–Ω–æ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏ –Ω–µ–¥–æ—ç–∫—Å–ø–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
   - –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: ¬±0.1 –¥–ª—è —Ç–æ–Ω–∫–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
   - Default: 0.0

6. –û–¢–¢–ï–ù–û–ö (Hue) [-0.5 –¥–æ 0.5, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 0.0]
   - –°–¥–≤–∏–≥ –ø–æ —Ü–≤–µ—Ç–æ–≤–æ–º—É –∫—Ä—É–≥—É
   - ¬±0.5 = –ø–æ–≤–æ—Ä–æ—Ç –Ω–∞ 180 –≥—Ä–∞–¥—É—Å–æ–≤
   - –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: ¬±0.05 –¥–ª—è —Ç–æ–Ω–∫–æ–π —Ü–≤–µ—Ç–æ–∫–æ—Ä—Ä–µ–∫—Ü–∏–∏
   - Default: 0.0

7. –ù–ê–°–´–©–ï–ù–ù–û–°–¢–¨ (Saturation) [0.0-5.0, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 1.0]
   - –ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å —Ü–≤–µ—Ç–æ–≤
   - 0.0 = —á–µ—Ä–Ω–æ-–±–µ–ª–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
   - 1.0 = –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ —Ü–≤–µ—Ç–∞
   - >1.0 = –±–æ–ª–µ–µ –Ω–∞—Å—ã—â–µ–Ω–Ω—ã–µ —Ü–≤–µ—Ç–∞
   - –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: 0.8-1.3 –¥–ª—è –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –≤–∏–¥–∞
   - Default: 1.0

8. –Ø–†–ö–û–°–¢–¨ HSV (Value) [0.0-5.0, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 1.0]
   - –Ø—Ä–∫–æ—Å—Ç—å –≤ —Ü–≤–µ—Ç–æ–≤–æ–π –º–æ–¥–µ–ª–∏ HSV
   - –í–ª–∏—è–µ—Ç –Ω–∞ —Å–≤–µ—Ç–ª–æ—Ç—É –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç—Ç–µ–Ω–∫–∞
   - –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: 0.8-1.2
   - Default: 1.0

9. –°–í–ï–¢–ê (Highlights) [-1.0 –¥–æ 1.0, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 0.0]
   - –ö–æ—Ä—Ä–µ–∫—Ü–∏—è —Ç–æ–ª—å–∫–æ —Å–≤–µ—Ç–ª—ã—Ö –æ–±–ª–∞—Å—Ç–µ–π
   - <0 = –∑–∞—Ç–µ–º–Ω–µ–Ω–∏–µ —Å–≤–µ—Ç–æ–≤ (–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π)
   - >0 = –æ—Å–≤–µ—Ç–ª–µ–Ω–∏–µ —Å–≤–µ—Ç–æ–≤
   - –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: -0.3 –¥–æ 0.3
   - Default: 0.0

10. –¢–ï–ù–ò (Shadows) [-1.0 –¥–æ 1.0, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 0.0]
    - –ö–æ—Ä—Ä–µ–∫—Ü–∏—è —Ç–æ–ª—å–∫–æ —Ç–µ–º–Ω—ã—Ö –æ–±–ª–∞—Å—Ç–µ–π
    - >0 = –æ—Å–≤–µ—Ç–ª–µ–Ω–∏–µ —Ç–µ–Ω–µ–π (–ø—Ä–æ—è–≤–ª–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π)
    - <0 = –∑–∞—Ç–µ–º–Ω–µ–Ω–∏–µ —Ç–µ–Ω–µ–π
    - –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: -0.3 –¥–æ 0.3
    - Default: 0.0

11. –¢–ï–ú–ü–ï–†–ê–¢–£–†–ê (Temperature) [-100 –¥–æ 100, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 0]
    - –ë–∞–ª–∞–Ω—Å —Ç–µ–ø–ª—ã—Ö/—Ö–æ–ª–æ–¥–Ω—ã—Ö —Ç–æ–Ω–æ–≤
    - >0 = —Ç–µ–ø–ª–µ–µ (–∂–µ–ª—Ç—ã–π –æ—Ç—Ç–µ–Ω–æ–∫)
    - <0 = —Ö–æ–ª–æ–¥–Ω–µ–µ (—Å–∏–Ω–∏–π –æ—Ç—Ç–µ–Ω–æ–∫)
    - –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: ¬±30 –¥–ª—è –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏
    - Default: 0.0

12. –û–¢–¢–ï–ù–û–ö –¶–í–ï–¢–ê (Tint) [-100 –¥–æ 100, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 0]
    - –ë–∞–ª–∞–Ω—Å –∑–µ–ª–µ–Ω—ã–π/–ø—É—Ä–ø—É—Ä–Ω—ã–π
    - >0 = –ø—É—Ä–ø—É—Ä–Ω—ã–π –æ—Ç—Ç–µ–Ω–æ–∫
    - <0 = –∑–µ–ª–µ–Ω—ã–π –æ—Ç—Ç–µ–Ω–æ–∫
    - –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: ¬±20 –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏ –æ—Ç—Ç–µ–Ω–∫–æ–≤ –∫–æ–∂–∏
    - Default: 0.0

13. –û–ì–†–ê–ù–ò–ß–ï–ù–ò–ï (Clamp) [True/False, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: True]
    - True = –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ [0,1]
    - False = —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å HDR –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è —Å–ø–µ—Ü—ç—Ñ—Ñ–µ–∫—Ç–æ–≤
    - –û—Ç–∫–ª—é—á–∞–π—Ç–µ —Ç–æ–ª—å–∫–æ –¥–ª—è bloom, glow –∏ –¥—Ä—É–≥–∏—Ö HDR —ç—Ñ—Ñ–µ–∫—Ç–æ–≤
    - Default: True

14. –ú–ê–°–ö–ê (Mask) [–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ]
    - –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –æ–±–ª–∞—Å—Ç–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–∞
    - –ë–µ–ª—ã–π = –ø—Ä–∏–º–µ–Ω–∏—Ç—å –∫–æ—Ä—Ä–µ–∫—Ü–∏—é
    - –ß–µ—Ä–Ω—ã–π = –æ—Å—Ç–∞–≤–∏—Ç—å –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    - –°–µ—Ä—ã–π = —á–∞—Å—Ç–∏—á–Ω–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ
    - Default: None (–ø—Ä–∏–º–µ–Ω–∏—Ç—å –∫–æ –≤—Å–µ–º—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é)
"""

import torch
import numpy as np
from PIL import Image
from typing import Optional


class MTB_ColorCorrect:
    """–ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –Ω–æ–¥–∞ —Ü–≤–µ—Ç–æ–∫–æ—Ä—Ä–µ–∫—Ü–∏–∏ —Å –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏

    –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
    - –ë–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: —è—Ä–∫–æ—Å—Ç—å, –∫–æ–Ω—Ç—Ä–∞—Å—Ç, –≥–∞–º–º–∞, —ç–∫—Å–ø–æ–∑–∏—Ü–∏—è, —Å–º–µ—â–µ–Ω–∏–µ
    - –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: —Å–≤–µ—Ç–∞/—Ç–µ–Ω–∏, —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞/–æ—Ç—Ç–µ–Ω–æ–∫
    - HSV –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: –æ—Ç—Ç–µ–Ω–æ–∫, –Ω–∞—Å—ã—â–µ–Ω–Ω–æ—Å—Ç—å, —è—Ä–∫–æ—Å—Ç—å
    - –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π –¥–ª—è HDR —Ä–∞–±–æ—á–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    - –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –º–∞—Å–æ–∫ –¥–ª—è –≤—ã–±–æ—Ä–æ—á–Ω–æ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è
    - –£—Å–∫–æ—Ä–µ–Ω–∏–µ –Ω–∞ GPU

    –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é:
    1. –ù–∞—á–Ω–∏—Ç–µ —Å –±–∞–∑–æ–≤—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ (—è—Ä–∫–æ—Å—Ç—å, –∫–æ–Ω—Ç—Ä–∞—Å—Ç)
    2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≥–∞–º–º—É –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏ —Å—Ä–µ–¥–Ω–∏—Ö —Ç–æ–Ω–æ–≤
    3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Å–≤–µ—Ç–∞/—Ç–µ–Ω–∏ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π
    4. –ü—Ä–∏–º–µ–Ω–∏—Ç–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É/–æ—Ç—Ç–µ–Ω–æ–∫ –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏
    5. –û—Ç–∫–ª—é—á–∏—Ç–µ clamp —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–ø–µ—Ü—ç—Ñ—Ñ–µ–∫—Ç–æ–≤
    """

    @classmethod
    def INPUT_TYPES(cls):
        return {
            "required": {
                # –í–•–û–î–ù–û–ï –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ï - –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —Ü–≤–µ—Ç–æ–∫–æ—Ä—Ä–µ–∫—Ü–∏–∏
                "image": ("IMAGE",),

                # –Ø–†–ö–û–°–¢–¨ - –æ–±—â–∞—è —è—Ä–∫–æ—Å—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                # 1.0 = –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π, 0.5 = —Ç–µ–º–Ω–µ–µ –≤–¥–≤–æ–µ, 2.0 = —è—Ä—á–µ –≤–¥–≤–æ–µ
                # –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: 0.8-1.2 –¥–ª—è —Ç–æ–Ω–∫–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
                "brightness": ("FLOAT", {
                    "default": 1.0,
                    "min": 0.0,
                    "max": 2.0,
                    "step": 0.01,
                    "display": "slider",
                    "tooltip": "–Ø—Ä–∫–æ—Å—Ç—å: 1.0=–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π, <1=—Ç–µ–º–Ω–µ–µ, >1=—è—Ä—á–µ. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è 0.8-1.2"
                }),

                # –ö–û–ù–¢–†–ê–°–¢ - —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É —Å–≤–µ—Ç–ª—ã–º–∏ –∏ —Ç–µ–º–Ω—ã–º–∏ –æ–±–ª–∞—Å—Ç—è–º–∏
                # 1.0 = –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π, 0 = –ø–ª–æ—Å–∫–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, 2.0 = —É—Å–∏–ª–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç—Ä–∞—Å—Ç
                # –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: 0.8-1.3 –¥–ª—è –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –≤–∏–¥–∞
                "contrast": ("FLOAT", {
                    "default": 1.0,
                    "min": 0.0,
                    "max": 5.0,
                    "step": 0.01,
                    "display": "slider",
                    "tooltip": "–ö–æ–Ω—Ç—Ä–∞—Å—Ç: 1.0=–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π, <1=–º—è–≥—á–µ, >1=—Ä–µ–∑—á–µ. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è 0.8-1.3"
                }),

                # –ì–ê–ú–ú–ê - –Ω–µ–ª–∏–Ω–µ–π–Ω–∞—è –∫–æ—Ä—Ä–µ–∫—Ü–∏—è —Å—Ä–µ–¥–Ω–∏—Ö —Ç–æ–Ω–æ–≤
                # 1.0 = –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π, <1 = —Å–≤–µ—Ç–ª–µ–µ —Å—Ä–µ–¥–Ω–∏–µ —Ç–æ–Ω–∞, >1 = —Ç–µ–º–Ω–µ–µ —Å—Ä–µ–¥–Ω–∏–µ —Ç–æ–Ω–∞
                # –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: 0.8-1.2 –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏ —ç–∫—Å–ø–æ–∑–∏—Ü–∏–∏ –±–µ–∑ –ø–æ—Ç–µ—Ä–∏ –¥–µ—Ç–∞–ª–µ–π
                "gamma": ("FLOAT", {
                    "default": 1.0,
                    "min": 0.1,
                    "max": 5.0,
                    "step": 0.01,
                    "display": "slider",
                    "tooltip": "–ì–∞–º–º–∞: –∫–æ—Ä—Ä–µ–∫—Ü–∏—è —Å—Ä–µ–¥–Ω–∏—Ö —Ç–æ–Ω–æ–≤. <1=—Å–≤–µ—Ç–ª–µ–µ, >1=—Ç–µ–º–Ω–µ–µ. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è 0.8-1.2"
                }),

                # –≠–ö–°–ü–û–ó–ò–¶–ò–Ø - –∏–º–∏—Ç–∞—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤—ã–¥–µ—Ä–∂–∫–∏ –∫–∞–º–µ—Ä—ã
                # 0 = –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π, +1 = –≤ 2 —Ä–∞–∑–∞ —è—Ä—á–µ, -1 = –≤ 2 —Ä–∞–∑–∞ —Ç–µ–º–Ω–µ–µ
                # –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: -0.5 –¥–æ +0.5 –¥–ª—è —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ–π –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏
                "exposure": ("FLOAT", {
                    "default": 0.0,
                    "min": -5.0,
                    "max": 5.0,
                    "step": 0.01,
                    "display": "slider",
                    "tooltip": "–≠–∫—Å–ø–æ–∑–∏—Ü–∏—è: –∏–º–∏—Ç–∞—Ü–∏—è –≤—ã–¥–µ—Ä–∂–∫–∏. ¬±1=—É–¥–≤–æ–µ–Ω–∏–µ/—É–ø–æ–ª–æ–≤–∏–Ω–∏–≤–∞–Ω–∏–µ —Å–≤–µ—Ç–∞. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è ¬±0.5"
                }),

                # –°–ú–ï–©–ï–ù–ò–ï - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ/–≤—ã—á–∏—Ç–∞–Ω–∏–µ —è—Ä–∫–æ—Å—Ç–∏ –∫–æ –≤—Å–µ–º—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
                # 0 = –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π, –ø–æ–ª–µ–∑–Ω–æ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏ —á–µ—Ä–Ω–æ–π —Ç–æ—á–∫–∏
                # –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: -0.1 –¥–æ +0.1 –¥–ª—è —Ç–æ–Ω–∫–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
                "offset": ("FLOAT", {
                    "default": 0.0,
                    "min": -1.0,
                    "max": 1.0,
                    "step": 0.01,
                    "display": "slider",
                    "tooltip": "–°–º–µ—â–µ–Ω–∏–µ: —Å–¥–≤–∏–≥ —á–µ—Ä–Ω–æ–π —Ç–æ—á–∫–∏. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è ¬±0.1 –¥–ª—è —Ç–æ–Ω–∫–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"
                }),

                # –û–¢–¢–ï–ù–û–ö - —Å–¥–≤–∏–≥ –ø–æ —Ü–≤–µ—Ç–æ–≤–æ–º—É –∫—Ä—É–≥—É
                # 0 = –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π, ¬±0.5 = –ø–æ–ª–Ω—ã–π –æ–±–æ—Ä–æ—Ç (180¬∞)
                # –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: ¬±0.05 –¥–ª—è —Ç–æ–Ω–∫–æ–π —Ü–≤–µ—Ç–æ–∫–æ—Ä—Ä–µ–∫—Ü–∏–∏
                "hue": ("FLOAT", {
                    "default": 0.0,
                    "min": -0.5,
                    "max": 0.5,
                    "step": 0.01,
                    "display": "slider",
                    "tooltip": "–û—Ç—Ç–µ–Ω–æ–∫: –ø–æ–≤–æ—Ä–æ—Ç —Ü–≤–µ—Ç–æ–≤–æ–≥–æ –∫—Ä—É–≥–∞. ¬±0.5=180¬∞. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è ¬±0.05"
                }),

                # –ù–ê–°–´–©–ï–ù–ù–û–°–¢–¨ - –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å —Ü–≤–µ—Ç–æ–≤
                # 1.0 = –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π, 0 = —á/–±, 2.0 = —É–¥–≤–æ–µ–Ω–Ω–∞—è –Ω–∞—Å—ã—â–µ–Ω–Ω–æ—Å—Ç—å
                # –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: 0.8-1.3 –¥–ª—è –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ü–≤–µ—Ç–æ–≤
                "saturation": ("FLOAT", {
                    "default": 1.0,
                    "min": 0.0,
                    "max": 5.0,
                    "step": 0.01,
                    "display": "slider",
                    "tooltip": "–ù–∞—Å—ã—â–µ–Ω–Ω–æ—Å—Ç—å: –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å —Ü–≤–µ—Ç–æ–≤. 0=—á/–±, 1=–Ω–æ—Ä–º–∞. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è 0.8-1.3"
                }),

                # –Ø–†–ö–û–°–¢–¨ HSV - —è—Ä–∫–æ—Å—Ç—å –≤ —Ü–≤–µ—Ç–æ–≤–æ–π –º–æ–¥–µ–ª–∏ HSV
                # 1.0 = –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π, –≤–ª–∏—è–µ—Ç –Ω–∞ –æ–±—â—É—é —Å–≤–µ—Ç–ª–æ—Ç—É –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç—Ç–µ–Ω–∫–∞
                # –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: 0.8-1.2 –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ü–≤–µ—Ç–æ–≤–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞
                "value": ("FLOAT", {
                    "default": 1.0,
                    "min": 0.0,
                    "max": 5.0,
                    "step": 0.01,
                    "display": "slider",
                    "tooltip": "–Ø—Ä–∫–æ—Å—Ç—å HSV: —Å–≤–µ—Ç–ª–æ—Ç–∞ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–≤–µ—Ç–∞. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è 0.8-1.2"
                }),

                # –°–í–ï–¢–ê - –∫–æ—Ä—Ä–µ–∫—Ü–∏—è —Ç–æ–ª—å–∫–æ —Å–≤–µ—Ç–ª—ã—Ö –æ–±–ª–∞—Å—Ç–µ–π
                # 0 = –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π, +1 = –æ—Å–≤–µ—Ç–ª–µ–Ω–∏–µ —Å–≤–µ—Ç–æ–≤, -1 = –∑–∞—Ç–µ–º–Ω–µ–Ω–∏–µ —Å–≤–µ—Ç–æ–≤
                # –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: ¬±0.3 –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π –≤ —Å–≤–µ—Ç–∞—Ö
                "highlights": ("FLOAT", {
                    "default": 0.0,
                    "min": -1.0,
                    "max": 1.0,
                    "step": 0.01,
                    "display": "slider",
                    "tooltip": "–°–≤–µ—Ç–∞: –∫–æ—Ä—Ä–µ–∫—Ü–∏—è —è—Ä–∫–∏—Ö –æ–±–ª–∞—Å—Ç–µ–π. -=–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è ¬±0.3"
                }),

                # –¢–ï–ù–ò - –∫–æ—Ä—Ä–µ–∫—Ü–∏—è —Ç–æ–ª—å–∫–æ —Ç–µ–º–Ω—ã—Ö –æ–±–ª–∞—Å—Ç–µ–π
                # 0 = –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π, +1 = –æ—Å–≤–µ—Ç–ª–µ–Ω–∏–µ —Ç–µ–Ω–µ–π, -1 = –∑–∞—Ç–µ–º–Ω–µ–Ω–∏–µ —Ç–µ–Ω–µ–π
                # –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: ¬±0.3 –¥–ª—è –ø—Ä–æ—Ä–∞–±–æ—Ç–∫–∏ –¥–µ—Ç–∞–ª–µ–π –≤ —Ç–µ–Ω—è—Ö
                "shadows": ("FLOAT", {
                    "default": 0.0,
                    "min": -1.0,
                    "max": 1.0,
                    "step": 0.01,
                    "display": "slider",
                    "tooltip": "–¢–µ–Ω–∏: –∫–æ—Ä—Ä–µ–∫—Ü–∏—è —Ç–µ–º–Ω—ã—Ö –æ–±–ª–∞—Å—Ç–µ–π. +=–æ—Å–≤–µ—Ç–ª–µ–Ω–∏–µ —Ç–µ–Ω–µ–π. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è ¬±0.3"
                }),

                # –¢–ï–ú–ü–ï–†–ê–¢–£–†–ê - –±–∞–ª–∞–Ω—Å –º–µ–∂–¥—É —Ç–µ–ø–ª—ã–º–∏ –∏ —Ö–æ–ª–æ–¥–Ω—ã–º–∏ —Ç–æ–Ω–∞–º–∏
                # 0 = –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π, + = —Ç–µ–ø–ª–µ–µ (–∂–µ–ª—Ç—ã–π), - = —Ö–æ–ª–æ–¥–Ω–µ–µ (—Å–∏–Ω–∏–π)
                # –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: ¬±30 –¥–ª—è –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏
                "temperature": ("FLOAT", {
                    "default": 0.0,
                    "min": -100.0,
                    "max": 100.0,
                    "step": 1.0,
                    "display": "slider",
                    "tooltip": "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: +=—Ç–µ–ø–ª–µ–µ (–∂–µ–ª—Ç—ã–π), -=—Ö–æ–ª–æ–¥–Ω–µ–µ (—Å–∏–Ω–∏–π). –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è ¬±30"
                }),

                # –û–¢–¢–ï–ù–û–ö –¶–í–ï–¢–ê - –±–∞–ª–∞–Ω—Å –º–µ–∂–¥—É –∑–µ–ª–µ–Ω—ã–º –∏ –ø—É—Ä–ø—É—Ä–Ω—ã–º
                # 0 = –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π, + = –ø—É—Ä–ø—É—Ä–Ω—ã–π –æ—Ç—Ç–µ–Ω–æ–∫, - = –∑–µ–ª–µ–Ω—ã–π –æ—Ç—Ç–µ–Ω–æ–∫
                # –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: ¬±20 –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏ –æ—Ç—Ç–µ–Ω–∫–∞ –∫–æ–∂–∏
                "tint": ("FLOAT", {
                    "default": 0.0,
                    "min": -100.0,
                    "max": 100.0,
                    "step": 1.0,
                    "display": "slider",
                    "tooltip": "–û—Ç—Ç–µ–Ω–æ–∫: +=–ø—É—Ä–ø—É—Ä–Ω—ã–π, -=–∑–µ–ª–µ–Ω—ã–π. –î–ª—è –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏ –∫–æ–∂–∏ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è ¬±20"
                }),

                # –û–ì–†–ê–ù–ò–ß–ï–ù–ò–ï - –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞—Ç—å –ª–∏ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ [0,1]
                # True = —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ä–µ–∂–∏–º, False = HDR —Ä–µ–∂–∏–º –¥–ª—è —Å–ø–µ—Ü—ç—Ñ—Ñ–µ–∫—Ç–æ–≤
                "clamp": ("BOOLEAN", {
                    "default": True,
                    "tooltip": "–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π [0,1]. –û—Ç–∫–ª—é—á–∏—Ç–µ –¥–ª—è HDR –∏ —Å–ø–µ—Ü—ç—Ñ—Ñ–µ–∫—Ç–æ–≤ (bloom/glow)"
                }),
            },
            "optional": {
                # –ú–ê–°–ö–ê - –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –º–∞—Å–∫–∞ –¥–ª—è –≤—ã–±–æ—Ä–æ—á–Ω–æ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–æ–≤
                # –ë–µ–ª—ã–µ –æ–±–ª–∞—Å—Ç–∏ = –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∞, —á–µ—Ä–Ω—ã–µ = –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
                "mask": ("MASK",),
            }
        }

    RETURN_TYPES = ("IMAGE",)
    FUNCTION = "correct"
    CATEGORY = "Gayrat/image processing"

    @staticmethod
    def tensor2pil(tensor):
        """–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Ç–µ–Ω–∑–æ—Ä–∞ –≤ PIL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è

        –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç:
        - –û–¥–∏–Ω–æ—á–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (H,W,C)
        - –ë–∞—Ç—á–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (B,H,W,C)
        """
        if len(tensor.shape) == 4:
            # Batch of images
            return [Image.fromarray(np.clip(255. * t.cpu().numpy(), 0, 255).astype(np.uint8)) for t in tensor]
        else:
            # Single image
            return Image.fromarray(np.clip(255. * tensor.cpu().numpy(), 0, 255).astype(np.uint8))

    @staticmethod
    def pil2tensor(pil_images):
        """–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è PIL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –æ–±—Ä–∞—Ç–Ω–æ –≤ —Ç–µ–Ω–∑–æ—Ä

        –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è –≤ –¥–∏–∞–ø–∞–∑–æ–Ω [0,1]
        –∏ —Å–æ–±–∏—Ä–∞–µ—Ç –±–∞—Ç—á –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
        """
        if isinstance(pil_images, list):
            # Batch of images
            tensors = [torch.from_numpy(np.array(img).astype(np.float32) / 255.0) for img in pil_images]
            return torch.stack(tensors)
        else:
            # Single image
            return torch.from_numpy(np.array(pil_images).astype(np.float32) / 255.0).unsqueeze(0)

    @staticmethod
    def rgb_to_hsv_torch(image: torch.Tensor):
        """–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è RGB –≤ HSV –∏—Å–ø–æ–ª—å–∑—É—è –æ–ø–µ—Ä–∞—Ü–∏–∏ PyTorch

        HSV (Hue, Saturation, Value) –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å:
        - –û—Ç—Ç–µ–Ω–æ–∫ (Hue): –ø–æ–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ —Ü–≤–µ—Ç–æ–≤–æ–º –∫—Ä—É–≥–µ [0,1]
        - –ù–∞—Å—ã—â–µ–Ω–Ω–æ—Å—Ç—å (Saturation): –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å —Ü–≤–µ—Ç–∞ [0,1]
        - –Ø—Ä–∫–æ—Å—Ç—å (Value): —Å–≤–µ—Ç–ª–æ—Ç–∞ —Ü–≤–µ—Ç–∞ [0,1]
        """
        r, g, b = image.unbind(-1)
        max_rgb, argmax_rgb = image.max(-1)
        min_rgb, _ = image.min(-1)
        diff = max_rgb - min_rgb

        h = torch.zeros_like(max_rgb)
        s = diff / (max_rgb + 1e-7)
        v = max_rgb

        # Calculate hue
        h[argmax_rgb == 0] = (g - b)[argmax_rgb == 0] / (diff + 1e-7)[argmax_rgb == 0]
        h[argmax_rgb == 1] = 2.0 + (b - r)[argmax_rgb == 1] / (diff + 1e-7)[argmax_rgb == 1]
        h[argmax_rgb == 2] = 4.0 + (r - g)[argmax_rgb == 2] / (diff + 1e-7)[argmax_rgb == 2]

        h = (h / 6.0) % 1.0
        h = h.unsqueeze(-1)
        s = s.unsqueeze(-1)
        v = v.unsqueeze(-1)

        return torch.cat((h, s, v), dim=-1)

    @staticmethod
    def hsv_to_rgb_torch(hsv: torch.Tensor):
        """–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è HSV –æ–±—Ä–∞—Ç–Ω–æ –≤ RGB

        –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è HSV->RGB
        —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π 6 —Å–µ–∫—Ç–æ—Ä–æ–≤ —Ü–≤–µ—Ç–æ–≤–æ–≥–æ –∫—Ä—É–≥–∞
        """
        h, s, v = hsv.unbind(-1)
        h = h * 6.0
        i = torch.floor(h)
        f = h - i

        p = v * (1.0 - s)
        q = v * (1.0 - s * f)
        t = v * (1.0 - s * (1.0 - f))

        i = i.long() % 6

        # –°–æ–∑–¥–∞–µ–º –º–∞—Å–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–µ–∫—Ç–æ—Ä–∞ —Ü–≤–µ—Ç–æ–≤–æ–≥–æ –∫—Ä—É–≥–∞
        mask = torch.stack((i == 0, i == 1, i == 2, i == 3, i == 4, i == 5), -1)

        # –í—ã—á–∏—Å–ª—è–µ–º RGB –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–µ–∫—Ç–æ—Ä–∞
        # –°–µ–∫—Ç–æ—Ä 0: R=v, G=t, B=p
        # –°–µ–∫—Ç–æ—Ä 1: R=q, G=v, B=p
        # –°–µ–∫—Ç–æ—Ä 2: R=p, G=v, B=t
        # –°–µ–∫—Ç–æ—Ä 3: R=p, G=q, B=v
        # –°–µ–∫—Ç–æ—Ä 4: R=t, G=p, B=v
        # –°–µ–∫—Ç–æ—Ä 5: R=v, G=p, B=q

        # –ö—Ä–∞—Å–Ω—ã–π –∫–∞–Ω–∞–ª
        r = v * mask[..., 0] + q * mask[..., 1] + p * mask[..., 2] + \
            p * mask[..., 3] + t * mask[..., 4] + v * mask[..., 5]

        # –ó–µ–ª–µ–Ω—ã–π –∫–∞–Ω–∞–ª
        g = t * mask[..., 0] + v * mask[..., 1] + v * mask[..., 2] + \
            q * mask[..., 3] + p * mask[..., 4] + p * mask[..., 5]

        # –°–∏–Ω–∏–π –∫–∞–Ω–∞–ª
        b = p * mask[..., 0] + p * mask[..., 1] + t * mask[..., 2] + \
            v * mask[..., 3] + v * mask[..., 4] + q * mask[..., 5]

        return torch.stack((r, g, b), dim=-1)

    @staticmethod
    def adjust_highlights_shadows(image: torch.Tensor, highlights: float, shadows: float):
        """–†–∞–∑–¥–µ–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–≤–µ—Ç–ª—ã—Ö –∏ —Ç–µ–º–Ω—ã—Ö –æ–±–ª–∞—Å—Ç–µ–π

        –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –º–∞—Å–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —è—Ä–∫–æ—Å—Ç–∏ –¥–ª—è –≤—ã–±–æ—Ä–æ—á–Ω–æ–≥–æ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏—è:
        - –°–≤–µ—Ç–∞: –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏–µ –ø—Ä–æ–ø–æ—Ä—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –∫–≤–∞–¥—Ä–∞—Ç—É —è—Ä–∫–æ—Å—Ç–∏
        - –¢–µ–Ω–∏: –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏–µ –ø—Ä–æ–ø–æ—Ä—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –∫–≤–∞–¥—Ä–∞—Ç—É (1-—è—Ä–∫–æ—Å—Ç—å)
        """
        # Calculate luminance using Rec. 709 weights
        luminance = 0.2126 * image[..., 0] + 0.7152 * image[..., 1] + 0.0722 * image[..., 2]

        # Create smooth masks for highlights and shadows
        highlight_mask = torch.pow(luminance, 2.0).unsqueeze(-1)
        shadow_mask = torch.pow(1.0 - luminance, 2.0).unsqueeze(-1)

        # Apply adjustments
        if highlights != 0.0:
            image = image + highlights * highlight_mask * (1.0 - image)

        if shadows != 0.0:
            image = image + shadows * shadow_mask * image

        return image

    @staticmethod
    def adjust_temperature_tint(image: torch.Tensor, temperature: float, tint: float):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ü–≤–µ—Ç–æ–≤–æ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –∏ –æ—Ç—Ç–µ–Ω–∫–∞

        –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: —Å–¥–≤–∏–≥ –ø–æ –æ—Å–∏ —Å–∏–Ω–∏–π-–∂–µ–ª—Ç—ã–π (—Ö–æ–ª–æ–¥–Ω—ã–π-—Ç–µ–ø–ª—ã–π)
        –û—Ç—Ç–µ–Ω–æ–∫: —Å–¥–≤–∏–≥ –ø–æ –æ—Å–∏ –∑–µ–ª–µ–Ω—ã–π-–ø—É—Ä–ø—É—Ä–Ω—ã–π
        –ò–º–∏—Ç–∏—Ä—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–ª–∞–Ω—Å–∞ –±–µ–ª–æ–≥–æ –≤ –∫–∞–º–µ—Ä–µ
        """
        # Temperature adjustment matrix (blue-yellow axis)
        temp_scale = temperature / 100.0

        # Tint adjustment matrix (green-magenta axis)
        tint_scale = tint / 100.0

        # Apply temperature (affects red and blue channels)
        if temperature != 0:
            if temperature > 0:
                # Warmer (more yellow/red)
                image[..., 0] = image[..., 0] * (1.0 + temp_scale * 0.1)  # Red
                image[..., 2] = image[..., 2] * (1.0 - temp_scale * 0.1)  # Blue
            else:
                # Cooler (more blue)
                image[..., 0] = image[..., 0] * (1.0 + temp_scale * 0.1)  # Red
                image[..., 2] = image[..., 2] * (1.0 - temp_scale * 0.1)  # Blue

        # Apply tint (affects green channel)
        if tint != 0:
            image[..., 1] = image[..., 1] * (1.0 - tint_scale * 0.1)  # Green

        return image

    def correct(
            self,
            image: torch.Tensor,
            brightness: float,
            contrast: float,
            gamma: float,
            exposure: float,
            offset: float,
            hue: float,
            saturation: float,
            value: float,
            highlights: float,
            shadows: float,
            temperature: float,
            tint: float,
            clamp: bool,
            mask: Optional[torch.Tensor] = None,
    ):
        """–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–π —Ü–≤–µ—Ç–æ–∫–æ—Ä—Ä–µ–∫—Ü–∏–∏

        –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –¥–ª—è:
        1. –ú–∏–Ω–∏–º–∏–∑–∞—Ü–∏–∏ –ø–æ—Ç–µ—Ä–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        2. –ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –≤–∏–¥–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        3. –ü—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
        """

        # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –º–∞—Å–∫–∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
        if mask is not None:
            # Ensure mask has same batch size
            if mask.shape[0] != image.shape[0]:
                if mask.shape[0] == 1:
                    mask = mask.expand(image.shape[0], -1, -1)
                else:
                    raise ValueError("Mask batch size must match image batch size or be 1")

            # Expand mask to have same channels as image
            if mask.dim() == 3:
                mask = mask.unsqueeze(-1)
            mask = mask.expand(-1, -1, -1, image.shape[-1])

        # –ü—Ä–∏–º–µ–Ω—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç—ã –≤ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ –¥–ª—è –ª—É—á—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        adjusted = image.clone()

        # 1. –≠–ö–°–ü–û–ó–ò–¶–ò–Ø - –ø–µ—Ä–≤–æ–π, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ –±–∞–∑–æ–≤–∞—è –∫–æ—Ä—Ä–µ–∫—Ü–∏—è —Å–≤–µ—Ç–∞
        # –ò–º–∏—Ç–∏—Ä—É–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≤—ã–¥–µ—Ä–∂–∫–∏ –∫–∞–º–µ—Ä—ã (–º—É–ª—å—Ç–∏–ø–ª–∏–∫–∞—Ç–∏–≤–Ω–∞—è)
        if exposure != 0.0:
            adjusted = adjusted * (2.0 ** exposure)

        # 2. –Ø–†–ö–û–°–¢–¨ - –æ–±—â–µ–µ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç–∏
        # –ü—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –ø–æ—Å–ª–µ —ç–∫—Å–ø–æ–∑–∏—Ü–∏–∏ –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        if brightness != 1.0:
            adjusted = adjusted * brightness

        # 3. –ì–ê–ú–ú–ê - –Ω–µ–ª–∏–Ω–µ–π–Ω–∞—è –∫–æ—Ä—Ä–µ–∫—Ü–∏—è —Å—Ä–µ–¥–Ω–∏—Ö —Ç–æ–Ω–æ–≤
        # –ù–µ –∑–∞—Ç—Ä–∞–≥–∏–≤–∞–µ—Ç —á–µ—Ä–Ω—É—é –∏ –±–µ–ª—É—é —Ç–æ—á–∫–∏
        if gamma != 1.0:
            adjusted = torch.pow(adjusted, 1.0 / gamma)

        # 4. –ö–û–ù–¢–†–ê–°–¢ - —É—Å–∏–ª–µ–Ω–∏–µ —Ä–∞–∑–Ω–∏—Ü—ã –æ—Ç —Å—Ä–µ–¥–Ω–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
        # –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —è—Ä–∫–æ—Å—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ü–≤–µ—Ç–æ–≤–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞
        if contrast != 1.0:
            # –†–∞—Å—á–µ—Ç —è—Ä–∫–æ—Å—Ç–∏ –ø–æ Rec. 709
            luminance = 0.2126 * adjusted[..., 0] + 0.7152 * adjusted[..., 1] + 0.0722 * adjusted[..., 2]
            luminance_mean = torch.mean(luminance)

            # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ç—Ä–∞—Å—Ç–∞ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —Å—Ä–µ–¥–Ω–µ–π —è—Ä–∫–æ—Å—Ç–∏
            adjusted = (adjusted - luminance_mean) * contrast + luminance_mean

        # 5. –°–ú–ï–©–ï–ù–ò–ï - –∞–¥–¥–∏—Ç–∏–≤–Ω–∞—è –∫–æ—Ä—Ä–µ–∫—Ü–∏—è —á–µ—Ä–Ω–æ–π —Ç–æ—á–∫–∏
        # –ü—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –ø–æ—Å–ª–µ –º—É–ª—å—Ç–∏–ø–ª–∏–∫–∞—Ç–∏–≤–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
        if offset != 0.0:
            adjusted = adjusted + offset

        # 6. –°–í–ï–¢–ê –ò –¢–ï–ù–ò - –ª–æ–∫–∞–ª—å–Ω–∞—è –∫–æ—Ä—Ä–µ–∫—Ü–∏—è –ø–æ —è—Ä–∫–æ—Å—Ç–∏
        # –ü–æ–∑–≤–æ–ª—è–µ—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –±–µ–∑ –≤–ª–∏—è–Ω–∏—è –Ω–∞ —Å—Ä–µ–¥–Ω–∏–µ —Ç–æ–Ω–∞
        if highlights != 0.0 or shadows != 0.0:
            adjusted = MTB_ColorCorrect.adjust_highlights_shadows(adjusted, highlights, shadows)

        # 7. –¢–ï–ú–ü–ï–†–ê–¢–£–†–ê –ò –û–¢–¢–ï–ù–û–ö - —Ü–≤–µ—Ç–æ–≤–æ–π –±–∞–ª–∞–Ω—Å
        # –ü—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –ø–æ—Å–ª–µ —è—Ä–∫–æ—Å—Ç–Ω—ã—Ö –∫–æ—Ä—Ä–µ–∫—Ü–∏–π
        if temperature != 0.0 or tint != 0.0:
            adjusted = MTB_ColorCorrect.adjust_temperature_tint(adjusted, temperature, tint)

        # 8. HSV –ö–û–†–†–ï–ö–¶–ò–ò - —Ñ–∏–Ω–∞–ª—å–Ω–∞—è —Ü–≤–µ—Ç–æ–≤–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
        # –ü—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è —Ü–≤–µ—Ç–∞
        if hue != 0.0 or saturation != 1.0 or value != 1.0:
            # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ HSV –¥–ª—è –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ü–≤–µ—Ç–æ–≤—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
            hsv = MTB_ColorCorrect.rgb_to_hsv_torch(adjusted)

            # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∫–æ—Ä—Ä–µ–∫—Ü–∏–π:
            hsv[..., 0] = (hsv[..., 0] + hue) % 1.0  # –û—Ç—Ç–µ–Ω–æ–∫ (—Ü–∏–∫–ª–∏—á–µ—Å–∫–∏–π)
            hsv[..., 1] = hsv[..., 1] * saturation  # –ù–∞—Å—ã—â–µ–Ω–Ω–æ—Å—Ç—å (–º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ)
            hsv[..., 2] = hsv[..., 2] * value  # –Ø—Ä–∫–æ—Å—Ç—å HSV (–º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ)

            # –û–±—Ä–∞—Ç–Ω–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ RGB
            adjusted = MTB_ColorCorrect.hsv_to_rgb_torch(hsv)

        # –û–ì–†–ê–ù–ò–ß–ï–ù–ò–ï –ó–ù–ê–ß–ï–ù–ò–ô
        # –ü—Ä–∏ clamp=True –∑–Ω–∞—á–µ–Ω–∏—è –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞—é—Ç—Å—è [0,1] –¥–ª—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        # –ü—Ä–∏ clamp=False —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏—è –≤–Ω–µ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –¥–ª—è HDR –∏ —Å–ø–µ—Ü—ç—Ñ—Ñ–µ–∫—Ç–æ–≤
        if clamp:
            adjusted = torch.clamp(adjusted, 0.0, 1.0)

        # –ü–†–ò–ú–ï–ù–ï–ù–ò–ï –ú–ê–°–ö–ò
        # –ú–∞—Å–∫–∞ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –æ–±–ª–∞—Å—Ç–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–∞:
        # –ë–µ–ª—ã–π (>0.5) = –ø—Ä–∏–º–µ–Ω–∏—Ç—å —ç—Ñ—Ñ–µ–∫—Ç, –ß–µ—Ä–Ω—ã–π (‚â§0.5) = –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª
        if mask is not None:
            result = torch.where(mask > 0.5, adjusted, image)
        else:
            result = adjusted

        return (result,)


# Node class mappings for ComfyUI
NODE_CLASS_MAPPINGS = {
    "MTB_ColorCorrect": MTB_ColorCorrect
}

NODE_DISPLAY_NAME_MAPPINGS = {
    "MTB_ColorCorrect": "–¶–≤–µ—Ç–æ–∫–æ—Ä—Ä–µ–∫—Ü–∏—è (–ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è)"  # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
}